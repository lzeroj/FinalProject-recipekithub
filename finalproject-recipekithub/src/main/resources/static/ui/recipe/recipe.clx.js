/*
 * App URI: recipe/recipe
 * Source Location: recipe/recipe.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("recipe/recipe", { 
		onPrepare: function(loader) {
			loader.addCSS("theme/cleopatra-theme.css");
			loader.addCSS("theme/controls/htmlobject.part.css");
			loader.addCSS("theme/custom-theme.css");
			loader.addCSS("theme/settings.part.css");
			loader.addCSS("theme/custom-settings.part.css");
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * recipe.js
			 * Created at 2023. 8. 9. 오전 10:50:44.
			 *
			 * @author user
			 ************************************************/

			/*
			 * 루트 컨테이너에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(e){
				var searchParam = cpr.core.Platform.INSTANCE.getParameter("searchValue");
				console.log(searchParam);
				var dataMap = app.lookup("dmSearch");
				if(searchParam !="" && searchParam !=null){
					app.lookup("headerUdc").searchValue = searchParam;
					app.lookup("headerUdc").categoryValue = "레시피";
					dataMap.setValue("searchValue", searchParam);
				}
			}

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e) {
				app.lookup("type").value = "전체";
				app.lookup("ingredients").value = "전체";
				app.lookup("method").value = "전체";
				app.lookup("sort").value = "최신순";
				var submission = app.lookup("recipeBoardList");
				submission.send();
			}

			/*
			 * 서브미션에서 receive 이벤트 발생 시 호출.
			 * 서버로 부터 데이터를 모두 전송받았을 때 발생합니다.
			 */
			//function onRecipeBoardListReceive(e) {
			//	var recipeBoardList = e.control;
			//	var xhr = recipeBoardList.xhr;
			//	var jsonData = JSON.parse(xhr.responseText);
			//	var recipeList = jsonData.recipe_board;
			//	var totalPostCount = jsonData.totalPostCount;
			//	var likeCounts = jsonData.likeCounts;
			//	console.log(likeCounts.length);
			//	var container = app.lookup("grp");
			//	app.lookup("recipeCount").value = totalPostCount;
			//	for (var i = 0; i < recipeList.length; i++) {
			//		(function(index) {
			//			//udc 동적 생성
			//			var recipe = new udc.recipeListudc();
			//			//udc에서 출판한 이미지 경로 앱 속성 지정
			//			recipe.img = "/upload/recipe/" + recipeList[i].recipeBoardImage;
			//			recipe.hits = recipeList[i].recipeBoardHits;
			//			recipe.nick = recipeList[i].memberVO.memberNick;
			//			recipe.title = recipeList[i].recipeBoardTitle;
			//			recipe.like = likeCounts[i];
			//			container.addChild(recipe, {
			//				height: "250px",
			//				width: "230px",
			//				autoSize: "both"
			//			});
			//			recipe.addEventListener("imgClick", function(e) {
			//				window.location.href = "/detailRecipe?recipeBoardId=" + recipeList[index].recipeBoardId;
			//			});
			//		})(i);
			//	}
			//}	

				
				//	var recipeList = cpr.core.Platform.INSTANCE.getParameter("recipe_board");
			//	var pagination = cpr.core.Platform.INSTANCE.getParameter("pagination");
			//	console.log(pagination);
			//	var container = app.lookup("grp");
			//	app.lookup("recipeCount").value = recipeList.length;
			//	for (var i = 0; i < recipeList.length; i++) {
			//		(function(index) {
			//			var recipe = new udc.recipeListudc();
			//			recipe.img = "/upload/recipe/" + recipeList[i].recipeBoardImage;
			//			console.log(recipeList.img);
			//			recipe.hits = recipeList[i].recipeBoardHits;
			//			recipe.nick = recipeList[i].memberVO.memberNick;
			//			recipe.title = recipeList[i].recipeBoardTitle;
			//			container.addChild(recipe, {
			//				height: "250px",
			//				width: "230px",
			//				autoSize: "both"
			//			});
			//			recipe.addEventListener("imgClick", function(e) {
			//				window.location.href = "/detailRecipe?recipeBoardId=" + recipeList[index].recipeBoardId;
			//			});
			//		})(i);
			//	}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onRecipeBoardListSubmitSuccess(e){
				var recipeBoardList = e.control;
				var xhr = recipeBoardList.xhr;
				var jsonData = JSON.parse(xhr.responseText);
				var recipeList = jsonData.recipe_board;
				var totalRecipeCount = jsonData.totalRecipeCount;
				var likeCounts = jsonData.likeCounts;
				var container = app.lookup("grp");
				
				app.lookup("page").totalRowCount = totalRecipeCount;
				app.lookup("recipeCount").value = totalRecipeCount;
				
				container.removeAllChildren();
				
				for (var i = 0; i < recipeList.length; i++) {
					(function(index) {
						//udc 동적 생성
						var recipe = new udc.recipeListudc();
						//udc에서 출판한 이미지 경로 앱 속성 지정
						recipe.img = "/upload/recipe/" + recipeList[i].recipeBoardImage;
						recipe.hits = recipeList[i].recipeBoardHits;
						recipe.nick = recipeList[i].memberVO.memberNick;
						recipe.title = recipeList[i].recipeBoardTitle;
						recipe.profile = "/upload/profile/" + recipeList[i].memberVO.memberImage;
						recipe.like = likeCounts[i];
						container.addChild(recipe, {
							height: "250px",
							width: "300px",
							autoSize: "both"
						});
						recipe.addEventListener("imgClick", function(e) {
							window.location.href = "/detailRecipe?recipeBoardId=" + recipeList[index].recipeBoardId;
						});
					})(i);
				}
			}

			/*
			 * 페이지 인덱서에서 selection-change 이벤트 발생 시 호출.
			 * Page index를 선택하여 선택된 페이지가 변경된 후에 발생하는 이벤트.
			 */
			function onPageSelectionChange(e){
				var page = e.control;
				app.lookup("recipeBoardList").send();
			}


			/*
			 * 내비게이션 바에서 selection-change 이벤트 발생 시 호출.
			 * 선택된 Item 값이 저장된 후에 발생하는 이벤트.
			 */
			function onTypeSelectionChange(e){
				var type = e.control;
				app.lookup("sort").value = "최신순";
				app.lookup("page").currentPageIndex = 1;
				app.lookup("recipeBoardList").send();
			}

			/*
			 * 내비게이션 바에서 selection-change 이벤트 발생 시 호출.
			 * 선택된 Item 값이 저장된 후에 발생하는 이벤트.
			 */
			function onIngredientsSelectionChange(e){
				var ingredients = e.control;
				app.lookup("sort").value = "최신순";
				app.lookup("page").currentPageIndex = 1;
				app.lookup("recipeBoardList").send();
			}

			/*
			 * 내비게이션 바에서 selection-change 이벤트 발생 시 호출.
			 * 선택된 Item 값이 저장된 후에 발생하는 이벤트.
			 */
			function onMethodSelectionChange(e){
				var method = e.control;
				app.lookup("sort").value = "최신순";
				app.lookup("page").currentPageIndex = 1;
				app.lookup("recipeBoardList").send();
			}

			/*
			 * 내비게이션 바에서 selection-change 이벤트 발생 시 호출.
			 * 선택된 Item 값이 저장된 후에 발생하는 이벤트.
			 */
			function onSortSelectionChange(e){
				var sort = e.control;
				app.lookup("page").currentPageIndex = 1;
				app.lookup("recipeBoardList").send();
			};
			// End - User Script
			
			// Header
			app.supportMedia("all", "default");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			
			// UI Configuration
		}
	});
	app.title = "recipe";
	cpr.core.Platform.INSTANCE.register(app);
})();

/*
 * App URI: embedded/admin/findQnAAdminForm
 * Source Location: embedded/admin/findQnAAdminForm.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("embedded/admin/findQnAAdminForm", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * findQnAAdminForm.js
			 * Created at 2023. 8. 17. 오후 4:59:21.
			 *
			 * @author shj22k
			 ************************************************/

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				app.lookup("subfindqnalistadmin").send();
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSubfindqnalistadminSubmitSuccess(e){
				var subfindqnalistadmin = e.control;
				var dataSet = app.lookup("qnalistadmin");
				var metadata = subfindqnalistadmin.getMetadata("memberEmail");
				var grid = app.lookup("grd1");
				for(var i=0;i<dataSet.getRowCount();i++){
					var boardResponseStatus = dataSet.getValue(i, "boardResponseStatus");
					var value = "theme/images/mypage/"+boardResponseStatus+".png";
					dataSet.setValue(i, "memberEmail", metadata[i].memberEmail);
					dataSet.setValue(i, "boardResponseStatus", value);
				}
				grid.redraw();
			}

			/*
			 * "선택 열기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e){
				var button = e.control;
				var grid = app.lookup("grd1");
				var selectedRowIndex = grid.getSelectedRowIndex();	
				var row = grid.dataSet.getRow(selectedRowIndex);
				app.lookup("boardIddm").setValue("boardId", row.getValue("boardId"));
				app.lookup("subfindqnadetailadmin").send();
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSubfindqnadetailadminSubmitSuccess(e){
				var subfindqnadetailadmin = e.control;
				var host = app.getHost(); // 부모 임베디드 앱
				var boardId = app.lookup("responseqnaselect").getValue(0, "boardId");
				var boardTitle = app.lookup("responseqnaselect").getValue(0, "boardTitle");
				var boardContent = app.lookup("responseqnaselect").getValue(0, "boardContent");
				
				var initValue = {"boardId": boardId , "boardTitle" : boardTitle, "boardContent":boardContent};
				cpr.core.App.load("embedded/admin/findQnAAdminSelect", function(loadedApp){
					if (loadedApp){
						host.initValue = initValue;
						host.app = loadedApp;
					}
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("qnalistadmin");
			dataSet_1.parseData({
				"columns" : [
					{
						"name": "boardId",
						"dataType": "number"
					},
					{"name": "memberEmail"},
					{"name": "boardTitle"},
					{
						"name": "boardRegDate",
						"dataType": "string"
					},
					{"name": "boardResponseStatus"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("responseqnaselect");
			dataSet_2.parseData({
				"columns" : [
					{"name": "boardId"},
					{"name": "boardTitle"},
					{"name": "boardContent"}
				]
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("boardIddm");
			dataMap_1.parseData({
				"columns" : [{"name": "boardId"}]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subfindqnalistadmin");
			submission_1.action = "/selectQnaListAdmin";
			submission_1.addResponseData(dataSet_1, false);
			if(typeof onSubfindqnalistadminSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onSubfindqnalistadminSubmitSuccess);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subfindqnadetailadmin");
			submission_2.action = "/selectQnaDetailAdmin";
			submission_2.mediaType = "application/x-www-form-urlencoded;simple";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_2, false);
			if(typeof onSubfindqnadetailadminSubmitSuccess == "function") {
				submission_2.addEventListener("submit-success", onSubfindqnadetailadminSubmitSuccess);
			}
			app.register(submission_2);
			app.supportMedia("all", "FHD");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container();
				group_2.style.css({
					"background-color" : "#FFFFFF"
				});
				var formLayout_1 = new cpr.controls.layouts.FormLayout();
				formLayout_1.scrollable = false;
				formLayout_1.topMargin = "0px";
				formLayout_1.rightMargin = "0px";
				formLayout_1.bottomMargin = "0px";
				formLayout_1.leftMargin = "0px";
				formLayout_1.horizontalSpacing = "0px";
				formLayout_1.verticalSpacing = "0px";
				formLayout_1.setColumns(["1fr", "160px"]);
				formLayout_1.setRows(["50px", "20px", "1fr", "20px", "50px"]);
				group_2.setLayout(formLayout_1);
				(function(container){
					var output_1 = new cpr.controls.Output();
					output_1.value = "Q & A 리스트";
					output_1.style.css({
						"background-color" : "#FFFFFF",
						"color" : "#0fd465",
						"font-weight" : "bold",
						"font-size" : "18px",
						"font-family" : "푸른전남",
						"text-align" : "center"
					});
					container.addChild(output_1, {
						"colIndex": 0,
						"rowIndex": 0,
						"colSpan": 2,
						"rowSpan": 1
					});
					var grid_1 = new cpr.controls.Grid("grd1");
					grid_1.readOnly = true;
					grid_1.init({
						"dataSet": app.lookup("qnalistadmin"),
						"columns": [
							{"width": "30px"},
							{"width": "121px"},
							{"width": "74px"},
							{"width": "135px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.style.css({
											"background-color" : "#0ebc59",
											"color" : "#FFFFFF",
											"font-weight" : "bold"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.targetColumnName = "boardTitle";
										cell.text = "제목";
										cell.style.css({
											"background-color" : "#0ebc59",
											"color" : "#FFFFFF",
											"font-weight" : "bold"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.targetColumnName = "memberEmail";
										cell.text = "작성자";
										cell.style.css({
											"background-color" : "#0ebc59",
											"color" : "#FFFFFF",
											"font-weight" : "bold"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.targetColumnName = "boardRegDate";
										cell.text = "작성일";
										cell.style.css({
											"background-color" : "#0ebc59",
											"color" : "#FFFFFF",
											"font-weight" : "bold"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.targetColumnName = "boardResponseStatus";
										cell.text = "답변여부";
										cell.style.css({
											"background-color" : "#0ebc59",
											"color" : "#FFFFFF",
											"font-weight" : "bold"
										});
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "64px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "rowindex";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "boardTitle";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "memberEmail";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "boardRegDate";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "boardResponseStatus";
										cell.control = (function(){
											var image_1 = new cpr.controls.Image();
											image_1.bind("value").toDataColumn("boardResponseStatus");
											return image_1;
										})();
										cell.controlConstraint = {
											"horizontalAlign": "center",
											"verticalAlign": "center",
											"width": 40,
											"height": 40
										};
									}
								}
							]
						}
					});
					grid_1.style.css({
						"background-color" : "#FFFFFF",
						"border-right-style" : "solid",
						"border-top-width" : "0px",
						"border-left-style" : "solid",
						"border-right-width" : "0px",
						"border-bottom-width" : "0px",
						"border-bottom-style" : "solid",
						"border-left-width" : "0px",
						"border-top-style" : "solid"
					});
					container.addChild(grid_1, {
						"colIndex": 0,
						"rowIndex": 2,
						"colSpan": 2,
						"rowSpan": 1
					});
					var button_1 = new cpr.controls.Button();
					button_1.value = "선택 열기";
					button_1.style.css({
						"background-color" : "#0ebc59",
						"color" : "#FFFFFF",
						"font-size" : "16px",
						"background-image" : "none"
					});
					if(typeof onButtonClick == "function") {
						button_1.addEventListener("click", onButtonClick);
					}
					container.addChild(button_1, {
						"colIndex": 1,
						"rowIndex": 4
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "30px",
					"bottom": "30px",
					"width": "860px",
					"left": "calc(50% - 430px)"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"right": "0px",
				"bottom": "0px",
				"left": "0px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "findQnAAdminForm";
	cpr.core.Platform.INSTANCE.register(app);
})();

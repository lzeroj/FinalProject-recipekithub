/*
 * App URI: embedded/myPageQnARegisterSelect
 * Source Location: embedded/myPageQnARegisterSelect.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("embedded/myPageQnARegisterSelect", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * myPageQnARegisterSelect.js
			 * Created at 2023. 8. 14. 오후 2:46:41.
			 *
			 * @author shj22k
			 ************************************************/

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				var host = app.getHost(); // 부모 임베디드 앱
				var val = host.initValue;
				app.lookup("ipb1").text = val.boardTitle;
				app.lookup("txa1").text = val.boardContent;
				app.lookup("ipb1").redraw();
				app.lookup("txa1").redraw();
			}

			/*
			 * "수정하기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e){
				var button = e.control;
				var host = app.getHost(); // 부모 임베디드 앱
				var val = host.initValue;
				var initValue = {"boardId": val.boardId,"boardTitle" : val.boardTitle, "boardContent":val.boardContent};
				
			    if(confirm("수정화면으로 이동하시겠습니까?")){
					cpr.core.App.load("embedded/myPageQnAUpdateForm", function(loadedApp){
						if (loadedApp){
							host.initValue = initValue;
							host.app = loadedApp;
						}
					});
			    }
				
			}

			/*
			 * "답변 달기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(e){
				var button = e.control;
				var container1 = app.lookup("grp1");
				var container = app.getContainer();
				
			//	container.updateConstraint(container1, {
			//		
			//	});
				container1.style.css({
					"height": "1200px",
					"bottom": "100px",
					"background-color": "black"
				});
				container1.redraw();
				
				var group_3 = new cpr.controls.Container("grp3");
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_3);
				var button_3 = new cpr.controls.Button();
				container.addChild(button_3, {
					"top":"800px"
				});
				container.addChild(group_3, {
					"top":"600px",
					"height": "308px"
				});
				
				app.lookup("grp1").redraw();
			}

			/*
			 * 루트 컨테이너에서 before-draw 이벤트 발생 시 호출.
			 * 그룹 컨텐츠가 그려지기 직전에 호출되는 이벤트 입니다. 내부 컨텐츠를 동적으로 구성하기위한 용도로만 사용됩니다.
			 */
			function onBodyBeforeDraw(e){
				var group = e.control;

			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("responseqnaselect");
			dataSet_1.parseData({
				"columns" : [
					{"name": "boardId"},
					{"name": "boardTitle"},
					{"name": "boardContent"}
				]
			});
			app.register(dataSet_1);
			var submission_1 = new cpr.protocols.Submission("subqnaselect");
			app.register(submission_1);
			app.supportMedia("all", "new-screen");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp1");
			group_1.style.css({
				"background-color" : "#FFFFFF"
			});
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "Q & A";
				output_1.style.css({
					"padding-top" : "5px",
					"border-bottom-color" : "darkGrey",
					"color" : "#0fd465",
					"font-weight" : "bold",
					"border-bottom-width" : "1px",
					"font-size" : "18px",
					"border-bottom-style" : "solid",
					"font-family" : "푸른전남",
					"text-align" : "center"
				});
				container.addChild(output_1, {
					"width": "709px",
					"height": "50px"
				});
				var group_2 = new cpr.controls.Container();
				var xYLayout_1 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_1);
				(function(container){
					var inputBox_1 = new cpr.controls.InputBox("ipb1");
					inputBox_1.readOnly = true;
					inputBox_1.placeholder = "제목";
					inputBox_1.style.css({
						"border-radius" : "10px"
					});
					container.addChild(inputBox_1, {
						"top": "20px",
						"right": "20px",
						"left": "20px",
						"height": "40px"
					});
					var textArea_1 = new cpr.controls.TextArea("txa1");
					textArea_1.readOnly = true;
					textArea_1.value = "이메일 :\r\n전화번호 :\r\n---------------------------------------------------------------------------------------\r\n문의내용 :";
					textArea_1.style.css({
						"border-radius" : "10px"
					});
					container.addChild(textArea_1, {
						"top": "80px",
						"right": "20px",
						"bottom": "60px",
						"left": "20px"
					});
					var button_1 = new cpr.controls.Button();
					button_1.value = "수정하기";
					button_1.style.css({
						"background-color" : "#0ebc59",
						"color" : "#FFFFFF",
						"background-image" : "none"
					});
					if(typeof onButtonClick == "function") {
						button_1.addEventListener("click", onButtonClick);
					}
					container.addChild(button_1, {
						"right": "170px",
						"bottom": "20px",
						"width": "140px",
						"height": "30px"
					});
					var button_2 = new cpr.controls.Button();
					button_2.value = "뒤로가기";
					button_2.style.css({
						"background-color" : "#0ebc59",
						"color" : "#FFFFFF",
						"background-image" : "none"
					});
					container.addChild(button_2, {
						"right": "20px",
						"bottom": "20px",
						"width": "140px",
						"height": "30px"
					});
					var button_3 = new cpr.controls.Button();
					button_3.value = "답변 달기";
					if(typeof onButtonClick2 == "function") {
						button_3.addEventListener("click", onButtonClick2);
					}
					container.addChild(button_3, {
						"top": "458px",
						"left": "250px",
						"width": "140px",
						"height": "30px"
					});
				})(group_2);
				container.addChild(group_2, {
					"width": "709px",
					"height": "558px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "709px",
				"height": "608px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			if(typeof onBodyBeforeDraw == "function"){
				app.getContainer().addEventListener("before-draw", onBodyBeforeDraw);
			}
		}
	});
	app.title = "myPageQnARegisterSelect";
	cpr.core.Platform.INSTANCE.register(app);
})();

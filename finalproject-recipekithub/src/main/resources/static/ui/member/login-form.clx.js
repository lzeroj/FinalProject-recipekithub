/*
 * App URI: member/login-form
 * Source Location: member/login-form.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("member/login-form", { 
		onPrepare: function(loader) {
			loader.addCSS("theme/cleopatra-theme.css");
			loader.addCSS("theme/controls/accordion.part.css");
			loader.addCSS("theme/controls/apptitle.part.css");
			loader.addCSS("theme/controls/audio.part.css");
			loader.addCSS("theme/controls/button.part.css");
			loader.addCSS("theme/controls/calendar.part.css");
			loader.addCSS("theme/controls/checkbox.part.css");
			loader.addCSS("theme/controls/combo-box.part.css");
			loader.addCSS("theme/controls/common.part.css");
			loader.addCSS("theme/controls/date-input.part.css");
			loader.addCSS("theme/controls/dialog.part.css");
			loader.addCSS("theme/controls/file-input.part.css");
			loader.addCSS("theme/controls/file-upload.part.css");
			loader.addCSS("theme/controls/focus.part.css");
			loader.addCSS("theme/controls/form-layout.part.css");
			loader.addCSS("theme/controls/grid.part.css");
			loader.addCSS("theme/controls/htmlobject.css");
			loader.addCSS("theme/controls/htmlobject.part.css");
			loader.addCSS("theme/controls/input.part.css");
			loader.addCSS("theme/controls/linked-combo-box.part.css");
			loader.addCSS("theme/controls/linked-listbox.part.css");
			loader.addCSS("theme/controls/listbox.part.css");
			loader.addCSS("theme/controls/mask-editor.part.css");
			loader.addCSS("theme/controls/menu.part.css");
			loader.addCSS("theme/controls/nav-bar.part.css");
			loader.addCSS("theme/controls/notifier.part.css");
			loader.addCSS("theme/controls/number-editor.part.css");
			loader.addCSS("theme/controls/output.part.css");
			loader.addCSS("theme/controls/page-indexer.part.css");
			loader.addCSS("theme/controls/progress-bar.part.css");
			loader.addCSS("theme/controls/radio-button.part.css");
			loader.addCSS("theme/controls/searchinput.part.css");
			loader.addCSS("theme/controls/side-nav.part.css");
			loader.addCSS("theme/controls/slider.part.css");
			loader.addCSS("theme/controls/statecell.part.css");
			loader.addCSS("theme/controls/tabfolder.part.css");
			loader.addCSS("theme/controls/textarea.part.css");
			loader.addCSS("theme/controls/tree.part.css");
			loader.addCSS("theme/controls/treecell.part.css");
			loader.addCSS("theme/controls/video.part.css");
			loader.addCSS("theme/custom-settings.part.css");
			loader.addCSS("theme/custom-theme.css");
			loader.addCSS("theme/custom/badge.part.css");
			loader.addCSS("theme/custom/breadcrumb.part.css");
			loader.addCSS("theme/custom/button.part.css");
			loader.addCSS("theme/custom/card.part.css");
			loader.addCSS("theme/custom/dropdown.part.css");
			loader.addCSS("theme/custom/extensions.part.css");
			loader.addCSS("theme/custom/fonts.part.css");
			loader.addCSS("theme/custom/globals.part.css");
			loader.addCSS("theme/custom/main.part.css");
			loader.addCSS("theme/custom/member.part.css");
			loader.addCSS("theme/custom/search-box.part.css");
			loader.addCSS("theme/custom/spinner.part.css");
			loader.addCSS("theme/custom/status.part.css");
			loader.addCSS("theme/custom/table.part.css");
			loader.addCSS("theme/custom/typography.part.css");
			loader.addCSS("theme/settings.part.css");
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * login-form.js
			 * Created at 2023. 8. 10. 오후 3:51:42.
			 *
			 * @author kjoon
			 ************************************************/

			/*
			 * "로그인" 버튼(loginBtn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onLoginBtnClick(e) {
				//var loginBtn = e.control;
				var dataMap = app.lookup("dm_login");
				dataMap.setValue("member_email", app.lookup("emailInput").value);
				dataMap.setValue("member_password", app.lookup("pswdInput").value);
				var subLogin = app.lookup("sub_login");
				subLogin.send();
			}

			/*
			 * "회원가입" 버튼(registerBtn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onRegisterBtnClick(e) {
				var registerBtn = e.control;
				window.location.href = "member/register-form.clx";
			}

			/*
			 * "이메일 / 비밀번호 찾기" 버튼(findBtn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onFindBtnClick(e) {
				var findBtn = e.control;
				
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSub_loginSubmitSuccess(e) {
				var sub_login = e.control;
				var httpPostMethod = new cpr.protocols.HttpPostMethod("ui/index.clx");
				httpPostMethod.submit();
			}

			/*
			 * 서브미션에서 submit-error 이벤트 발생 시 호출.
			 * 통신 중 문제가 생기면 발생합니다.
			 */
			function onSub_loginSubmitError(e) {
				var sub_login = e.control;
				
			}

			/*
			 * 인풋 박스에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트. 키코드 관련 상수는 {@link cpr.events.KeyCode}에서 참조할 수 있습니다.
			 */
			function onPswdInputKeydown(e) {
				var pswdInput = e.control;
				if (e.keyCode == cpr.events.KeyCode.ENTER) {
					app.lookup("btnLogin").click();
				}
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds_member");
			dataSet_1.parseData({
				"columns" : [
					{
						"name": "member_email",
						"dataType": "string"
					},
					{
						"name": "member_password",
						"dataType": "string"
					},
					{
						"name": "member_name",
						"dataType": "string"
					},
					{
						"name": "member_nick",
						"dataType": "string"
					},
					{
						"name": "member_address",
						"dataType": "string"
					},
					{
						"name": "member_phone",
						"dataType": "string"
					},
					{
						"name": "member_birthday",
						"dataType": "string"
					},
					{
						"name": "member_type",
						"dataType": "string"
					},
					{
						"name": "member_status",
						"dataType": "string"
					},
					{
						"name": "member_reg_date",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dm_login");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "member_email",
						"dataType": "string"
					},
					{
						"name": "member_password",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("sub_login");
			submission_1.action = "/member/login";
			submission_1.addRequestData(dataMap_1);
			if(typeof onSub_loginSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onSub_loginSubmitSuccess);
			}
			if(typeof onSub_loginSubmitError == "function") {
				submission_1.addEventListener("submit-error", onSub_loginSubmitError);
			}
			app.register(submission_1);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"border-bottom-style" : "none",
				"border-top-style" : "none",
				"border-right-style" : "none",
				"width" : "100%",
				"height" : "100%",
				"border-left-style" : "none"
			});
			
			// Layout
			var responsiveXYLayout_1 = new cpr.controls.layouts.ResponsiveXYLayout();
			container.setLayout(responsiveXYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			group_1.style.css({
				"background-color" : "#F0F0F0"
			});
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container();
				group_2.style.css({
					"border-radius" : "5px",
					"background-color" : "#FEF9F6"
				});
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_2);
				(function(container){
					var group_3 = new cpr.controls.Container();
					group_3.style.css({
						"border-radius" : "10px",
						"background-color" : "#FFFFFF"
					});
					var xYLayout_3 = new cpr.controls.layouts.XYLayout();
					group_3.setLayout(xYLayout_3);
					(function(container){
						var group_4 = new cpr.controls.Container();
						group_4.style.css({
							"background-size" : "cover",
							"background-position" : "center"
						});
						var xYLayout_4 = new cpr.controls.layouts.XYLayout();
						group_4.setLayout(xYLayout_4);
						(function(container){
							var image_1 = new cpr.controls.Image();
							image_1.src = "theme/images/icon/logo03(1).png";
							container.addChild(image_1, {
								"top": "0px",
								"right": "0px",
								"left": "0px",
								"height": "210px"
							});
						})(group_4);
						container.addChild(group_4, {
							"top": "20px",
							"bottom": "398px",
							"width": "356px",
							"left": "calc(50% - 178px)"
						});
						var group_5 = new cpr.controls.Container();
						var xYLayout_5 = new cpr.controls.layouts.XYLayout();
						group_5.setLayout(xYLayout_5);
						(function(container){
							var group_6 = new cpr.controls.Container();
							var formLayout_1 = new cpr.controls.layouts.FormLayout();
							formLayout_1.scrollable = false;
							formLayout_1.topMargin = "10px";
							formLayout_1.rightMargin = "10px";
							formLayout_1.bottomMargin = "10px";
							formLayout_1.leftMargin = "10px";
							formLayout_1.horizontalSpacing = "10px";
							formLayout_1.verticalSpacing = "30px";
							formLayout_1.setColumns(["40px", "1fr"]);
							formLayout_1.setRows(["40px", "40px"]);
							group_6.setLayout(formLayout_1);
							(function(container){
								var inputBox_1 = new cpr.controls.InputBox("emailInput");
								inputBox_1.placeholder = " Email";
								inputBox_1.style.css({
									"font-size" : "16px"
								});
								inputBox_1.bind("value").toDataMap(app.lookup("dm_login"), "member_email");
								container.addChild(inputBox_1, {
									"colIndex": 1,
									"rowIndex": 0
								});
								var inputBox_2 = new cpr.controls.InputBox("pswdInput");
								inputBox_2.placeholder = " Password";
								inputBox_2.style.css({
									"font-size" : "16px"
								});
								inputBox_2.bind("value").toDataMap(app.lookup("dm_login"), "member_password");
								if(typeof onPswdInputKeydown == "function") {
									inputBox_2.addEventListener("keydown", onPswdInputKeydown);
								}
								container.addChild(inputBox_2, {
									"colIndex": 1,
									"rowIndex": 1
								});
								var image_2 = new cpr.controls.Image();
								image_2.src = "theme/images/com/main/dashboard/icon-user-2-line.svg";
								image_2.style.item.setClasses(["memberIcon"]);
								container.addChild(image_2, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var image_3 = new cpr.controls.Image();
								image_3.src = "theme/images/com/login/encrypted.png";
								container.addChild(image_3, {
									"colIndex": 0,
									"rowIndex": 1
								});
							})(group_6);
							container.addChild(group_6, {
								"top": "0px",
								"right": "0px",
								"bottom": "32px",
								"left": "0px"
							});
							var checkBox_1 = new cpr.controls.CheckBox("cbx1");
							checkBox_1.value = "true";
							checkBox_1.text = "ID 저장";
							checkBox_1.style.css({
								"font-size" : "15px",
								"text-align" : "right"
							});
							container.addChild(checkBox_1, {
								"top": "128px",
								"right": "0px",
								"bottom": "0px",
								"left": "0px"
							});
						})(group_5);
						container.addChild(group_5, {
							"top": "239px",
							"right": "40px",
							"bottom": "228px",
							"left": "40px"
						});
						var group_7 = new cpr.controls.Container();
						var formLayout_2 = new cpr.controls.layouts.FormLayout();
						formLayout_2.scrollable = false;
						formLayout_2.topMargin = "5px";
						formLayout_2.rightMargin = "5px";
						formLayout_2.bottomMargin = "5px";
						formLayout_2.leftMargin = "5px";
						formLayout_2.horizontalSpacing = "10px";
						formLayout_2.verticalSpacing = "25px";
						formLayout_2.setColumns(["1fr"]);
						formLayout_2.setRows(["45px", "45px", "25px"]);
						group_7.setLayout(formLayout_2);
						(function(container){
							var button_1 = new cpr.controls.Button("btnLogin");
							button_1.value = "로그인";
							button_1.style.setClasses(["btnLogin"]);
							button_1.style.css({
								"background-color" : "#ec631d",
								"border-radius" : "50px",
								"text-shadow" : "none",
								"border-bottom-color" : "#fa5d09",
								"color" : "#FFFFFF",
								"font-weight" : "bolder",
								"border-left-color" : "#fa5d09",
								"font-size" : "20px",
								"border-top-color" : "#fa5d09",
								"border-right-color" : "#fa5d09",
								"font-style" : "normal",
								"background-image" : "none"
							});
							if(typeof onLoginBtnClick == "function") {
								button_1.addEventListener("click", onLoginBtnClick);
							}
							container.addChild(button_1, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var button_2 = new cpr.controls.Button("registerBtn");
							button_2.value = "회원가입";
							button_2.style.css({
								"background-color" : "#f9bb00",
								"border-radius" : "50px",
								"text-shadow" : "none",
								"border-bottom-color" : "#f9bb00",
								"color" : "#FFFFFF",
								"font-weight" : "bolder",
								"border-left-color" : "#f9bb00",
								"font-size" : "20px",
								"border-top-color" : "#f9bb00",
								"border-right-color" : "#f9bb00",
								"font-style" : "normal",
								"background-image" : "none"
							});
							if(typeof onRegisterBtnClick == "function") {
								button_2.addEventListener("click", onRegisterBtnClick);
							}
							container.addChild(button_2, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var button_3 = new cpr.controls.Button("findBtn");
							button_3.value = "이메일 / 비밀번호 찾기";
							button_3.ariaButtonType = "link";
							button_3.style.css({
								"background-color" : "#F0F0F0",
								"text-shadow" : "none",
								"border-bottom-color" : "#f0f0f0",
								"font-weight" : "normal",
								"border-left-color" : "#f0f0f0",
								"border-top-color" : "#f0f0f0",
								"border-right-color" : "#f0f0f0",
								"background-image" : "none"
							});
							if(typeof onFindBtnClick == "function") {
								button_3.addEventListener("click", onFindBtnClick);
							}
							container.addChild(button_3, {
								"colIndex": 0,
								"rowIndex": 2
							});
						})(group_7);
						container.addChild(group_7, {
							"top": "437px",
							"right": "40px",
							"bottom": "20px",
							"left": "40px"
						});
					})(group_3);
					container.addChild(group_3, {
						"width": "384px",
						"height": "628px",
						"left": "calc(50% - 192px)",
						"top": "calc(50% - 314px)"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "20px",
					"right": "20px",
					"bottom": "20px",
					"left": "20px"
				});
			})(group_1);
			container.addChild(group_1, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023px)",
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					}, 
					{
						"media": "all and (max-width: 499px)",
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					}
				]
			});
		}
	});
	app.title = "login-form";
	cpr.core.Platform.INSTANCE.register(app);
})();

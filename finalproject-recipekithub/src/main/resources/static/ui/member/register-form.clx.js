/*
 * App URI: member/register-form
 * Source Location: member/register-form.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("member/register-form", { 
		onPrepare: function(loader) {
			loader.addCSS("theme/cleopatra-theme.css");
			loader.addCSS("theme/controls/htmlobject.css");
			loader.addCSS("theme/custom-theme.css");
			loader.addCSS("theme/custom/member.part.css");
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * register-form.js
			 * Created at 2023. 8. 10. 오후 3:52:01.
			 *
			 * @author kjoon
			 ************************************************/

			/*
			 * "가입" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e){
				var dataMap1 = app.lookup("dm_register_member");
				var dataMap2 = app.lookup("dm_check_email");
				var dataMap3 = app.lookup("dm_check_pswd");
				var dataMap4 = app.lookup("dm_check_nick");
				dataMap2.setValue("member_email", app.lookup("ipbEmail").value);
				dataMap3.setValue("member_password", app.lookup("ipbPassword1").value);
				dataMap1.setValue("member_name", app.lookup("ipbName").value);
				dataMap4.setValue("member_nick", app.lookup("ipbNick").value);
				dataMap1.setValue("member_birthday", app.lookup("ipbBirthday").value);
				dataMap1.setValue("member_phone", app.lookup("ipbPhone").value);
				dataMap1.setValue("member_address", app.lookup("ipbAddress").value);
				var subLogin = app.lookup("sub_register");
				subLogin.send();
			}

			/*
			 * "취소" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(e){
				window.location.href = "index.clx";
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSub_registerSubmitSuccess(e){
				var sub_register = e.control;
				alert("RecipeKitHub에 오신 것을 환영합니다..!!")
				var httpPostMethod = new cpr.protocols.HttpPostMethod("index.clx");
				httpPostMethod.submit();
			}


			/*
			 * 인풋 박스에서 keyup 이벤트 발생 시 호출.
			 * 사용자가 키에서 손을 뗄 때 발생하는 이벤트. 키코드 관련 상수는 {@link cpr.events.KeyCode}에서 참조할 수 있습니다.
			 */
			function onIpbEmailKeyup(e){
				var ipbEmail = e.control;
				var checkEmailFlag = false;	// 사용자가 사용 가능 상태에서 다시 사용불가 상태 아이디로 입력할 수 있으므로 keyup 이벤트 발생시마다 false로 상태 초기화
				
				var dataMap = app.lookup("dm_check_email");	
				dataMap.setValue("member_email", app.lookup("ipbEmail").value);
				
				var memberEmail = app.lookup("ipbEmail").value;
				var opbCheckEmailResult = app.lookup("opbCheckEmail");
				
				if (memberEmail.length < 6 || memberEmail.length > 25) {
					opbCheckEmailResult.value = "email은 6자이상 ~ 30자 이하이어야 합니다.";
				} else {
					var xhr = new XMLHttpRequest();
					xhr.onreadystatechange = function() {
						if (xhr.readyState == 4 && xhr.status == 200) {
							if (xhr.responseText == "fail") {
								opbCheckEmailResult.value = "이메일이 중복됩니다.";
							} else {
								checkEmailFlag = true;
								opbCheckEmailResult.value = "사용가능한 이메일입니다.";
							}
						}
					}
					//xhr.open("get", "/member/CheckEmail", true);
					//xhr.send();
					var subCheckEmail = app.lookup("sub_check_email");
					subCheckEmail.send();
				}
			}

			/*
			function checkMemberEmail() {
				var checkEmailFlag = false;	// 사용자가 사용 가능 상태에서 다시 사용불가 상태 아이디로 입력할 수 있으므로 keyup 이벤트 발생시마다 false로 상태 초기화
				var memberEmail = app.lookup("ipbEmail").value;
				var opbCheckEmailResult = app.lookup("opbCheckEmail");
				if (memberEmail.length < 6 || memberEmail.length > 25) {
					opbCheckEmailResult = "<font color=pink>email은 6자이상 ~ 30자 이하이어야 합니다.</font>";
				} else {
					var xhr = new XMLHttpRequest();
					xhr.onreadystatechange = function() {
						if (xhr.readyState == 4 && xhr.status == 200) {
							if (xhr.responseText == "fail") {
								opbCheckEmailResult = "<font color=red>이메일이 중복됩니다.</font>";
							} else {
								checkEmailFlag = true;
								opbCheckEmailResult = "<font color=blue>사용가능한 이메일입니다.</font>";
							}
						}
					}
					xhr.open("get", "../member/CheckEmail");
					xhr.send();
				}
			}
			*/


			/*
			 * 인풋 박스에서 keyup 이벤트 발생 시 호출.
			 * 사용자가 키에서 손을 뗄 때 발생하는 이벤트. 키코드 관련 상수는 {@link cpr.events.KeyCode}에서 참조할 수 있습니다.
			 */
			function onIpbPassword1Keyup(e){
				var ipbPassword1 = e.control;
				var checkPswd1Flag = false;	// 사용자가 사용 가능 상태에서 다시 사용불가 상태 아이디로 입력할 수 있으므로 keyup 이벤트 발생시마다 false로 상태 초기화
				var password1 = app.lookup("ipbPassword1").value;
				var checkPswdResult1 = app.lookup("opbCheckPassword1");
				if (password1.length < 2 || password1.length > 25) {
					checkPswdResult1 = "비밀번호는 1자 이상 25자 이하이어야 합니다.";
				} else {
					checkPswdResult1 = "사용가능한 비밀번호입니다.";
				}
			}

			/*
			 * 인풋 박스에서 keyup 이벤트 발생 시 호출.
			 * 사용자가 키에서 손을 뗄 때 발생하는 이벤트. 키코드 관련 상수는 {@link cpr.events.KeyCode}에서 참조할 수 있습니다.
			 */
			function onIpbPassword2Keyup(e){
				var ipbPassword2 = e.control;
				
			}

			function comparePassword() {
				var checkPswd2Flag = false;	
				var password2 = app.lookup("ipbPassword2").value;
				var checkPswdResult2 = app.lookup("opbCheckPassword2");
				//var pswd2_img1 = document.getElementById("pswd2_img1");

				if (app.lookup("ipbPassword1").value != password2) {
					checkPswdResult2 = "<font color=red>위의 비밀번호와 일치하지 않습니다. 다시 한번 확인해주세요.</font>";
					//pswd2_img1.classList.remove("glow"); 

				} else {
					checkPswdResult2 = "<font color=blue>비밀번호가 일치합니다.</font>";
					//pswd1_img1.classList.add("glow"); 
					//pswd2_img1.classList.add("glow"); 
				}
			}


			function checkNick() {
				var checkNickFlag = false;	// 사용자가 사용 가능 상태에서 다시 사용불가 상태 아이디로 입력할 수 있으므로 keyup 이벤트 발생시마다 false로 상태 초기화
				var memberNick = app.lookup("ipbNick").value;
				var checkNickResult = document.getElementById("checkNickResult");
				if (memberNick.length < 2 || memberNick.length > 10) {
					checkNickResult = "닉네임은 1자 이상 ~ 8자 이하이어야 합니다.";
				} else {
					var xhr = new XMLHttpRequest();
					xhr.onreadystatechange = function() {
						if (xhr.readyState == 4 && xhr.status == 200) {
							if (xhr.responseText == "fail") {
								checkNickResult = "닉네임이 중복됩니다.";
							} else {
								checkNickFlag = true;
								checkNickResult = "사용가능한 닉네임입니다.";
							}
						}
					}
					xhr.open("get", "../CheckNick");
					xhr.send();
				}
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds_member");
			dataSet_1.parseData({
				"columns" : [
					{
						"name": "member_email",
						"dataType": "string"
					},
					{
						"name": "member_password",
						"dataType": "string"
					},
					{
						"name": "member_name",
						"dataType": "string"
					},
					{
						"name": "member_nick",
						"dataType": "string"
					},
					{
						"name": "member_address",
						"dataType": "string"
					},
					{
						"name": "member_phone",
						"dataType": "string"
					},
					{
						"name": "member_birthday",
						"dataType": "string"
					},
					{
						"name": "member_type",
						"dataType": "string"
					},
					{
						"name": "member_status",
						"dataType": "string"
					},
					{
						"name": "member_reg_date",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dm_register_member");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "member_email",
						"dataType": "string"
					},
					{
						"name": "member_password",
						"dataType": "string"
					},
					{
						"name": "member_name",
						"dataType": "string"
					},
					{
						"name": "member_nick",
						"dataType": "string"
					},
					{
						"name": "member_address",
						"dataType": "string"
					},
					{
						"name": "member_phone",
						"dataType": "string"
					},
					{
						"name": "member_birthday",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dm_check_email");
			dataMap_2.parseData({
				"columns" : [{
					"name": "member_email",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dm_check_pswd");
			dataMap_3.parseData({
				"columns" : [{
					"name": "member_password",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dm_check_nick");
			dataMap_4.parseData({
				"columns" : [{
					"name": "member_nick",
					"dataType": "string"
				}]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("sub_register");
			submission_1.action = "/member/register";
			submission_1.addRequestData(dataMap_1);
			submission_1.addRequestData(dataMap_2);
			submission_1.addRequestData(dataMap_3);
			submission_1.addRequestData(dataMap_4);
			if(typeof onSub_registerSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onSub_registerSubmitSuccess);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("sub_check_email");
			submission_2.action = "/member/checkEmail";
			submission_2.addRequestData(dataMap_2);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("sub_check_password");
			submission_3.action = "/member/checkPswd";
			submission_3.addRequestData(dataMap_3);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("sub_check_nick");
			submission_4.action = "/member/checkNick";
			submission_4.addRequestData(dataMap_4);
			app.register(submission_4);
			app.supportMedia("all and (min-width: 1920px)", "FHD");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1919px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"background-color" : "#FFFFF6",
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var responsiveXYLayout_1 = new cpr.controls.layouts.ResponsiveXYLayout();
			container.setLayout(responsiveXYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			group_1.style.css({
				"background-repeat" : "no-repeat",
				"background-size" : "cover",
				"background-image" : "url('theme/images/member/21.png')",
				"background-position" : "center"
			});
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container();
				group_2.style.css({
					"background-size" : "cover",
					"background-position" : "center"
				});
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_2);
				(function(container){
					var group_3 = new cpr.controls.Container();
					group_3.style.css({
						"background-color" : "#E5F2E3",
						"border-radius" : "10px"
					});
					var responsiveXYLayout_2 = new cpr.controls.layouts.ResponsiveXYLayout();
					group_3.setLayout(responsiveXYLayout_2);
					(function(container){
						var group_4 = new cpr.controls.Container();
						var formLayout_1 = new cpr.controls.layouts.FormLayout();
						formLayout_1.scrollable = false;
						formLayout_1.topMargin = "5px";
						formLayout_1.rightMargin = "5px";
						formLayout_1.bottomMargin = "5px";
						formLayout_1.leftMargin = "5px";
						formLayout_1.horizontalSpacing = "0px";
						formLayout_1.verticalSpacing = "0px";
						formLayout_1.setColumns(["1fr"]);
						formLayout_1.setRows(["1fr"]);
						group_4.setLayout(formLayout_1);
						(function(container){
							var output_1 = new cpr.controls.Output();
							output_1.value = "회원가입";
							output_1.style.css({
								"font-weight" : "bolder",
								"font-size" : "32px",
								"text-align" : "center"
							});
							container.addChild(output_1, {
								"colIndex": 0,
								"rowIndex": 0
							});
						})(group_4);
						container.addChild(group_4, {
							positions: [
								{
									"media": "all and (min-width: 1920px)",
									"top": "20px",
									"right": "347px",
									"left": "341px",
									"height": "52px"
								}, 
								{
									"media": "all and (min-width: 1024px) and (max-width: 1919px)",
									"top": "20px",
									"right": "185px",
									"left": "182px",
									"height": "52px"
								}, 
								{
									"media": "all and (min-width: 500px) and (max-width: 1023px)",
									"top": "20px",
									"right": "90px",
									"left": "89px",
									"height": "52px"
								}, 
								{
									"media": "all and (max-width: 499px)",
									"top": "20px",
									"right": "63px",
									"left": "62px",
									"height": "52px"
								}
							]
						});
						var group_5 = new cpr.controls.Container();
						var xYLayout_3 = new cpr.controls.layouts.XYLayout();
						group_5.setLayout(xYLayout_3);
						(function(container){
							var group_6 = new cpr.controls.Container();
							var xYLayout_4 = new cpr.controls.layouts.XYLayout();
							group_6.setLayout(xYLayout_4);
							(function(container){
								var group_7 = new cpr.controls.Container();
								var formLayout_2 = new cpr.controls.layouts.FormLayout();
								formLayout_2.scrollable = false;
								formLayout_2.topMargin = "0px";
								formLayout_2.rightMargin = "0px";
								formLayout_2.bottomMargin = "0px";
								formLayout_2.leftMargin = "0px";
								formLayout_2.horizontalSpacing = "20px";
								formLayout_2.verticalSpacing = "20px";
								formLayout_2.setColumns(["1fr", "1fr", "10px", "1fr", "1fr"]);
								formLayout_2.setRows(["1fr"]);
								group_7.setLayout(formLayout_2);
								(function(container){
									var button_1 = new cpr.controls.Button();
									button_1.value = "가입";
									button_1.style.css({
										"border-right-style" : "solid",
										"border-bottom-color" : "#097f3d",
										"border-top-width" : "2px",
										"color" : "#097f3d",
										"border-right-width" : "2px",
										"font-weight" : "bolder",
										"border-left-color" : "#097f3d",
										"font-size" : "16px",
										"border-right-color" : "#097f3d",
										"border-left-width" : "2px",
										"border-top-style" : "solid",
										"background-color" : "#FFFFFF",
										"text-shadow" : "none",
										"border-left-style" : "solid",
										"border-bottom-width" : "2px",
										"border-top-color" : "#097f3d",
										"border-bottom-style" : "solid",
										"background-image" : "none"
									});
									if(typeof onButtonClick == "function") {
										button_1.addEventListener("click", onButtonClick);
									}
									container.addChild(button_1, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var button_2 = new cpr.controls.Button();
									button_2.value = "취소";
									button_2.style.css({
										"border-right-style" : "solid",
										"border-top-width" : "2px",
										"border-bottom-color" : "#a0a0a0",
										"color" : "#646464",
										"border-right-width" : "2px",
										"font-weight" : "bolder",
										"border-left-color" : "#a0a0a0",
										"font-size" : "16px",
										"border-right-color" : "#a0a0a0",
										"border-left-width" : "2px",
										"border-top-style" : "solid",
										"background-color" : "#FFFFFF",
										"border-left-style" : "solid",
										"border-bottom-width" : "2px",
										"border-top-color" : "#a0a0a0",
										"border-bottom-style" : "solid",
										"background-image" : "none"
									});
									if(typeof onButtonClick2 == "function") {
										button_2.addEventListener("click", onButtonClick2);
									}
									container.addChild(button_2, {
										"colIndex": 3,
										"rowIndex": 0
									});
								})(group_7);
								container.addChild(group_7, {
									"top": "566px",
									"right": "21px",
									"bottom": "5px",
									"left": "20px"
								});
							})(group_6);
							container.addChild(group_6, {
								"top": "19px",
								"right": "0px",
								"bottom": "0px",
								"left": "0px"
							});
							var group_8 = new cpr.controls.Container();
							group_8.style.css({
								"background-color" : "#FFFFFF",
								"border-radius" : "10px"
							});
							var formLayout_3 = new cpr.controls.layouts.FormLayout();
							formLayout_3.scrollable = false;
							formLayout_3.topMargin = "20px";
							formLayout_3.rightMargin = "10px";
							formLayout_3.bottomMargin = "20px";
							formLayout_3.leftMargin = "20px";
							formLayout_3.horizontalSpacing = "20px";
							formLayout_3.verticalSpacing = "20px";
							formLayout_3.setColumns(["120px", "200px", "80px"]);
							formLayout_3.setRows(["30px", "25px", "30px", "25px", "30px", "30px", "30px", "30px", "30px", "85px"]);
							group_8.setLayout(formLayout_3);
							(function(container){
								var output_2 = new cpr.controls.Output();
								output_2.value = " - Email";
								output_2.style.setClasses(["emphasis"]);
								output_2.style.css({
									"background-color" : "#F0F0F0",
									"border-radius" : "5px",
									"font-size" : "15px"
								});
								container.addChild(output_2, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var output_3 = new cpr.controls.Output();
								output_3.value = " - 비밀번호";
								output_3.style.setClasses(["emphasis"]);
								output_3.style.css({
									"background-color" : "#F0F0F0",
									"border-radius" : "5px",
									"font-size" : "15px"
								});
								container.addChild(output_3, {
									"colIndex": 0,
									"rowIndex": 2
								});
								var output_4 = new cpr.controls.Output();
								output_4.value = " - 비밀번호 확인";
								output_4.style.setClasses(["emphasis"]);
								output_4.style.css({
									"background-color" : "#F0F0F0",
									"border-radius" : "5px",
									"font-size" : "15px"
								});
								container.addChild(output_4, {
									"colIndex": 0,
									"rowIndex": 4
								});
								var output_5 = new cpr.controls.Output();
								output_5.value = " - 이름";
								output_5.style.setClasses(["emphasis"]);
								output_5.style.css({
									"background-color" : "#F0F0F0",
									"border-radius" : "5px",
									"font-size" : "15px"
								});
								container.addChild(output_5, {
									"colIndex": 0,
									"rowIndex": 5
								});
								var output_6 = new cpr.controls.Output();
								output_6.value = " - 닉네임";
								output_6.style.setClasses(["emphasis"]);
								output_6.style.css({
									"background-color" : "#F0F0F0",
									"border-radius" : "5px",
									"font-size" : "15px"
								});
								container.addChild(output_6, {
									"colIndex": 0,
									"rowIndex": 6
								});
								var output_7 = new cpr.controls.Output();
								output_7.value = " - 생년월일";
								output_7.style.setClasses(["emphasis"]);
								output_7.style.css({
									"background-color" : "#F0F0F0",
									"border-radius" : "5px",
									"font-size" : "15px"
								});
								container.addChild(output_7, {
									"colIndex": 0,
									"rowIndex": 7
								});
								var output_8 = new cpr.controls.Output();
								output_8.value = " - 핸드폰 번호";
								output_8.style.setClasses(["emphasis"]);
								output_8.style.css({
									"background-color" : "#F0F0F0",
									"border-radius" : "5px",
									"font-size" : "15px"
								});
								container.addChild(output_8, {
									"colIndex": 0,
									"rowIndex": 8
								});
								var output_9 = new cpr.controls.Output();
								output_9.value = " - 주소";
								output_9.style.css({
									"background-color" : "#F0F0F0",
									"border-radius" : "5px",
									"font-size" : "15px",
									"font-family" : "'fonts/PureunJeonnam.ttf' , 'Malgun Gothic' , sans-serif"
								});
								container.addChild(output_9, {
									"colIndex": 0,
									"rowIndex": 9
								});
								var inputBox_1 = new cpr.controls.InputBox("ipbEmail");
								inputBox_1.showClearButton = true;
								inputBox_1.maxLength = 30;
								inputBox_1.spellCheck = false;
								inputBox_1.style.css({
									"border-radius" : "5px",
									"font-size" : "15px"
								});
								inputBox_1.bind("value").toDataMap(app.lookup("dm_register_member"), "member_email");
								if(typeof onIpbEmailKeyup == "function") {
									inputBox_1.addEventListener("keyup", onIpbEmailKeyup);
								}
								container.addChild(inputBox_1, {
									"colIndex": 1,
									"rowIndex": 0,
									"colSpan": 1,
									"rowSpan": 1
								});
								var inputBox_2 = new cpr.controls.InputBox("ipbPassword1");
								inputBox_2.showClearButton = true;
								inputBox_2.maxLength = 25;
								inputBox_2.spellCheck = false;
								inputBox_2.style.css({
									"border-radius" : "5px",
									"font-size" : "15px"
								});
								inputBox_2.bind("value").toDataMap(app.lookup("dm_register_member"), "member_password");
								if(typeof onIpbPassword1Keyup == "function") {
									inputBox_2.addEventListener("keyup", onIpbPassword1Keyup);
								}
								container.addChild(inputBox_2, {
									"colIndex": 1,
									"rowIndex": 2
								});
								var inputBox_3 = new cpr.controls.InputBox("ipbPassword2");
								inputBox_3.showClearButton = true;
								inputBox_3.maxLength = 25;
								inputBox_3.spellCheck = false;
								inputBox_3.style.css({
									"border-radius" : "5px",
									"font-size" : "15px"
								});
								if(typeof onIpbPassword2Keyup == "function") {
									inputBox_3.addEventListener("keyup", onIpbPassword2Keyup);
								}
								container.addChild(inputBox_3, {
									"colIndex": 1,
									"rowIndex": 4
								});
								var inputBox_4 = new cpr.controls.InputBox("ipbName");
								inputBox_4.showClearButton = true;
								inputBox_4.lengthUnit = "utf8";
								inputBox_4.maxLength = 18;
								inputBox_4.spellCheck = false;
								inputBox_4.imeMode = "active";
								inputBox_4.style.css({
									"border-radius" : "5px",
									"font-size" : "15px"
								});
								inputBox_4.bind("value").toDataMap(app.lookup("dm_register_member"), "member_name");
								container.addChild(inputBox_4, {
									"colIndex": 1,
									"rowIndex": 5
								});
								var inputBox_5 = new cpr.controls.InputBox("ipbNick");
								inputBox_5.showClearButton = true;
								inputBox_5.lengthUnit = "utf8";
								inputBox_5.maxLength = 24;
								inputBox_5.spellCheck = false;
								inputBox_5.style.css({
									"border-radius" : "5px",
									"font-size" : "15px"
								});
								inputBox_5.bind("value").toDataMap(app.lookup("dm_register_member"), "member_nick");
								container.addChild(inputBox_5, {
									"colIndex": 1,
									"rowIndex": 6
								});
								var textArea_1 = new cpr.controls.TextArea("ipbAddress");
								textArea_1.lengthUnit = "utf8";
								textArea_1.maxLength = 90;
								textArea_1.spellCheck = false;
								textArea_1.imeMode = "active";
								textArea_1.style.css({
									"border-radius" : "5px",
									"font-size" : "15px"
								});
								textArea_1.bind("value").toDataMap(app.lookup("dm_register_member"), "member_address");
								container.addChild(textArea_1, {
									"colIndex": 1,
									"rowIndex": 9
								});
								var dateInput_1 = new cpr.controls.DateInput("ipbBirthday");
								dateInput_1.spinButton = true;
								dateInput_1.showClearButton = true;
								dateInput_1.style.setClasses(["cl-dateinput-register", "single-datepicker"]);
								dateInput_1.style.css({
									"border-radius" : "5px",
									"font-size" : "15px"
								});
								dateInput_1.bind("value").toDataMap(app.lookup("dm_register_member"), "member_birthday");
								container.addChild(dateInput_1, {
									"colIndex": 1,
									"rowIndex": 7
								});
								var maskEditor_1 = new cpr.controls.MaskEditor("ipbPhone");
								maskEditor_1.mask = "000-0000-0000";
								maskEditor_1.showClearButton = true;
								maskEditor_1.style.css({
									"border-radius" : "5px",
									"font-size" : "15px"
								});
								maskEditor_1.bind("value").toDataMap(app.lookup("dm_register_member"), "member_phone");
								container.addChild(maskEditor_1, {
									"colIndex": 1,
									"rowIndex": 8
								});
								var output_10 = new cpr.controls.Output("opbCheckEmail");
								output_10.value = "";
								output_10.style.css({
									"font-size" : "12px"
								});
								if(typeof onOpbCheckEmailValueChange == "function") {
									output_10.addEventListener("value-change", onOpbCheckEmailValueChange);
								}
								container.addChild(output_10, {
									"colIndex": 1,
									"rowIndex": 1,
									"colSpan": 2,
									"rowSpan": 1
								});
								var output_11 = new cpr.controls.Output("opbCheckPassword1");
								output_11.value = "";
								output_11.style.css({
									"font-size" : "12px"
								});
								if(typeof onOpbCheckPassword1ValueChange == "function") {
									output_11.addEventListener("value-change", onOpbCheckPassword1ValueChange);
								}
								container.addChild(output_11, {
									"colIndex": 1,
									"rowIndex": 3,
									"colSpan": 2,
									"rowSpan": 1
								});
								var output_12 = new cpr.controls.Output();
								output_12.value = "❈ 이메일 형식, 30자 이하";
								output_12.style.css({
									"font-size" : "10px"
								});
								container.addChild(output_12, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var output_13 = new cpr.controls.Output();
								output_13.value = "❈ 1자 이상~25자 이하";
								output_13.style.css({
									"font-size" : "10px"
								});
								container.addChild(output_13, {
									"colIndex": 0,
									"rowIndex": 3
								});
								var output_14 = new cpr.controls.Output("opbCheckPassword2");
								output_14.value = "";
								container.addChild(output_14, {
									"colIndex": 2,
									"rowIndex": 4
								});
								var image_1 = new cpr.controls.Image();
								container.addChild(image_1, {
									"colIndex": 2,
									"rowIndex": 2
								});
							})(group_8);
							container.addChild(group_8, {
								"top": "10px",
								"right": "0px",
								"bottom": "70px",
								"left": "0px"
							});
						})(group_5);
						container.addChild(group_5, {
							positions: [
								{
									"media": "all and (min-width: 1920px)",
									"top": "81px",
									"right": "54px",
									"left": "56px",
									"height": "640px"
								}, 
								{
									"media": "all and (min-width: 1024px) and (max-width: 1919px)",
									"top": "81px",
									"right": "29px",
									"left": "30px",
									"height": "640px"
								}, 
								{
									"media": "all and (min-width: 500px) and (max-width: 1023px)",
									"top": "81px",
									"right": "14px",
									"left": "15px",
									"height": "640px"
								}, 
								{
									"media": "all and (max-width: 499px)",
									"top": "81px",
									"right": "10px",
									"left": "10px",
									"height": "640px"
								}
							]
						});
					})(group_3);
					container.addChild(group_3, {
						"width": "530px",
						"height": "726px",
						"left": "calc(50% - 265px)",
						"top": "calc(50% - 363px)"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "20px",
					"right": "20px",
					"bottom": "20px",
					"left": "20px"
				});
			})(group_1);
			container.addChild(group_1, {
				positions: [
					{
						"media": "all and (min-width: 1920px)",
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					}, 
					{
						"media": "all and (min-width: 1024px) and (max-width: 1919px)",
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023px)",
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					}, 
					{
						"media": "all and (max-width: 499px)",
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					}
				]
			});
		}
	});
	app.title = "register-form";
	cpr.core.Platform.INSTANCE.register(app);
})();

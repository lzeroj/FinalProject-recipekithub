/*
 * App URI: mealkit/mealkitList
 * Source Location: mealkit/mealkitList.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("mealkit/mealkitList", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * mealkitList.js
			 * Created at 2023. 8. 16. 오후 3:05:31.
			 *
			 * @author KOSTA
			 ************************************************/

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				var mealkitList = cpr.core.Platform.INSTANCE.getParameter("mealkitList");
				var email = cpr.core.Platform.INSTANCE.getParameter("member");
				console.log("email = " + email);
				if(email !== "guest"){
					var button = app.lookup("insertBtn");
					button.visible = true;
					button.redraw();
				}
				var cnt = app.lookup("mealkitCnt");
				cnt.value = mealkitList.length;
				console.log("mealkitList = " + mealkitList);
				var container = app.lookup("grp");
				for (var i = 0; i < mealkitList.length; i++) {
					(function(index) {
						var mealkit = new udc.recipeListudc();
						mealkit.img = "/upload/meaklkitUpload/" + mealkitList[i].recipeBoardImage;
						console.log(mealkitList.img);
						mealkit.hits = mealkitList[i].mealkitHits;
						mealkit.nick = mealkitList[i].memberVO.memberNick;
						mealkit.title = mealkitList[i].mealkitName;
						container.addChild(mealkit, {
							height: "250px",
							width: "230px",
							autoSize: "both"
						});
						mealkit.addEventListener("imgClick", function(e) {
							window.location.href = "/mealkitDetail/" + mealkitList[index].mealkitNo;
						});
					})(i);
				}
			}

			/*
			 * "밀키트 등록" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(e){
				var button = e.control;
				window.location.href='/insertMealkitForm';
			};
			// End - User Script
			
			// Header
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			xYLayout_2.scrollable = false;
			group_1.setLayout(xYLayout_2);
			(function(container){
				var navigationBar_1 = new cpr.controls.NavigationBar();
				navigationBar_1.style.css({
					"font-size" : "13px"
				});
				(function(navigationBar_1){
					navigationBar_1.addItem(new cpr.controls.MenuItem("종류별", "종류별", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("전체", "전체", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("밑반찬", "밑반찬", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("메인반찬", "메인반찬", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("국/탕", "국/탕", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("찌개", "찌개", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("디저트", "디저트", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("면/만두", "면/만두", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("밥/죽/떡", "밥/죽/떡", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("퓨전", "퓨전", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("김치/장류", "김치/장류", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("양념/소스/잼", "양념/소스/잼", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("양식", "양식", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("샐러드", "샐러드", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("스프", "스프", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("빵", "빵", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("과자", "과자", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("차/음료/술", "차/음료/술", null));
					navigationBar_1.addItem(new cpr.controls.MenuItem("기타", "기타", null));
				})(navigationBar_1);
				container.addChild(navigationBar_1, {
					"top": "20px",
					"width": "1124px",
					"height": "36px",
					"left": "calc(50% - 562px)"
				});
				var navigationBar_2 = new cpr.controls.NavigationBar();
				(function(navigationBar_2){
					navigationBar_2.addItem(new cpr.controls.MenuItem("재료별", "재료별", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("전체", "전체", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("소고기", "소고기", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("돼지고기", "돼지고기", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("닭고기", "닭고기", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("육류", "육류", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("채소류", "채소류", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("해물류", "해물류", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("달걀/유제품", "달걀/유제품", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("가공식품류", "가공식품류", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("쌀", "쌀", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("밀가루", "밀가루", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("건어물류", "건어물류", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("과일류", "과일류", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("콩/견과류", "콩/견과류", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("곡류", "곡류", null));
					navigationBar_2.addItem(new cpr.controls.MenuItem("기타", "기타", null));
				})(navigationBar_2);
				container.addChild(navigationBar_2, {
					"top": "55px",
					"width": "1124px",
					"height": "32px",
					"left": "calc(50% - 562px)"
				});
				var navigationBar_3 = new cpr.controls.NavigationBar();
				(function(navigationBar_3){
					navigationBar_3.addItem(new cpr.controls.MenuItem("방법별", "방법별", null));
					navigationBar_3.addItem(new cpr.controls.MenuItem("전체", "전체", null));
					navigationBar_3.addItem(new cpr.controls.MenuItem("볶음", "볶음", null));
					navigationBar_3.addItem(new cpr.controls.MenuItem("끓이기", "끓이기", null));
					navigationBar_3.addItem(new cpr.controls.MenuItem("부침", "부침", null));
					navigationBar_3.addItem(new cpr.controls.MenuItem("조림", "조림", null));
					navigationBar_3.addItem(new cpr.controls.MenuItem("무침", "무침", null));
					navigationBar_3.addItem(new cpr.controls.MenuItem("비빔", "비빔", null));
					navigationBar_3.addItem(new cpr.controls.MenuItem("찜", "찜", null));
					navigationBar_3.addItem(new cpr.controls.MenuItem("절임", "절임", null));
					navigationBar_3.addItem(new cpr.controls.MenuItem("튀김", "튀김", null));
					navigationBar_3.addItem(new cpr.controls.MenuItem("삶기", "삶기", null));
					navigationBar_3.addItem(new cpr.controls.MenuItem("굽기", "굽기", null));
					navigationBar_3.addItem(new cpr.controls.MenuItem("데치기", "데치기", null));
					navigationBar_3.addItem(new cpr.controls.MenuItem("회", "회", null));
					navigationBar_3.addItem(new cpr.controls.MenuItem("기타", "기타", null));
				})(navigationBar_3);
				container.addChild(navigationBar_3, {
					"top": "86px",
					"width": "791px",
					"height": "40px",
					"left": "calc(50% - 395px)"
				});
				var group_2 = new cpr.controls.Container();
				group_2.style.css({
					"background-color" : "#FFFFFF"
				});
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var output_1 = new cpr.controls.Output();
					output_1.value = "총";
					output_1.style.css({
						"font-weight" : "bold"
					});
					container.addChild(output_1, {
						"top": "30px",
						"left": "45px",
						"width": "18px",
						"height": "20px"
					});
					var button_1 = new cpr.controls.Button();
					button_1.value = "최신순";
					button_1.style.css({
						"background-color" : "#ffbb3f",
						"background-image" : "none"
					});
					container.addChild(button_1, {
						"top": "34px",
						"left": "652px",
						"width": "100px",
						"height": "30px"
					});
					var button_2 = new cpr.controls.Button();
					button_2.value = "별점순";
					button_2.style.css({
						"background-color" : "white"
					});
					container.addChild(button_2, {
						"top": "35px",
						"left": "762px",
						"width": "100px",
						"height": "30px"
					});
					var button_3 = new cpr.controls.Button();
					button_3.value = "조회수순";
					button_3.style.css({
						"background-color" : "white"
					});
					container.addChild(button_3, {
						"top": "35px",
						"left": "872px",
						"width": "100px",
						"height": "30px"
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "개의 밀키트가 있습니다.";
					output_2.style.css({
						"font-weight" : "bold"
					});
					container.addChild(output_2, {
						"top": "30px",
						"left": "110px",
						"width": "247px",
						"height": "20px"
					});
					var output_3 = new cpr.controls.Output("mealkitCnt");
					output_3.value = "";
					output_3.style.css({
						"color" : "#0CA44E",
						"font-weight" : "bold",
						"font-size" : "18px",
						"text-align" : "center"
					});
					container.addChild(output_3, {
						"top": "20px",
						"left": "62px",
						"width": "49px",
						"height": "39px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "176px",
					"width": "984px",
					"height": "70px",
					"left": "calc(50% - 492px)"
				});
				var group_3 = new cpr.controls.Container();
				group_3.style.css({
					"background-color" : "#f9f9f9",
					"background-image" : "none"
				});
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				container.addChild(group_3, {
					"top": "136px",
					"width": "974px",
					"height": "31px",
					"left": "calc(50% - 487px)"
				});
				var group_4 = new cpr.controls.Container();
				group_4.style.css({
					"background-color" : "#f9f9f9",
					"background-image" : "none"
				});
				var xYLayout_5 = new cpr.controls.layouts.XYLayout();
				group_4.setLayout(xYLayout_5);
				container.addChild(group_4, {
					"top": "256px",
					"width": "974px",
					"height": "33px",
					"left": "calc(50% - 487px)"
				});
				var button_4 = new cpr.controls.Button();
				button_4.value = "Button";
				container.addChild(button_4, {
					"top": "1133px",
					"left": "452px",
					"width": "100px",
					"height": "20px"
				});
				var group_5 = new cpr.controls.Container("grp");
				var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
				flowLayout_1.scrollable = false;
				group_5.setLayout(flowLayout_1);
				container.addChild(group_5, {
					"top": "343px",
					"width": "968px",
					"height": "717px",
					"left": "calc(50% - 484px)"
				});
				var group_6 = new cpr.controls.Container();
				group_6.style.css({
					"background-color" : "#f9f9f9",
					"background-image" : "none"
				});
				var xYLayout_6 = new cpr.controls.layouts.XYLayout();
				group_6.setLayout(xYLayout_6);
				container.addChild(group_6, {
					"top": "1072px",
					"width": "974px",
					"height": "22px",
					"left": "calc(50% - 487px)"
				});
				var button_5 = new cpr.controls.Button("insertBtn");
				button_5.visible = false;
				button_5.value = "밀키트 등록";
				button_5.style.setClasses([".cl-button", "mealkitbtn"]);
				button_5.style.css({
					"background-color" : "#0ca44e",
					"color" : "white",
					"font-weight" : "16",
					"font-family" : "푸른전남 Medium",
					"background-image" : "none"
				});
				if(typeof onButtonClick2 == "function") {
					button_5.addEventListener("click", onButtonClick2);
				}
				container.addChild(button_5, {
					"top": "299px",
					"right": "20px",
					"width": "104px",
					"height": "34px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "20px",
				"bottom": "-557px",
				"width": "1004px",
				"left": "calc(50% - 502px)"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "mealkitList";
	cpr.core.Platform.INSTANCE.register(app);
})();

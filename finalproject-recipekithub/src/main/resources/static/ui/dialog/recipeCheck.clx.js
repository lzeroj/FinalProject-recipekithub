/*
 * App URI: dialog/recipeCheck
 * Source Location: dialog/recipeCheck.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("dialog/recipeCheck", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * saveCheck.js
			 * Created at 2023. 8. 20. 오후 5:18:57.
			 *
			 * @author user
			 ************************************************/

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				/* 해당 앱이 누군가로부터 불렸는지 (부모가 있는지) 확인*/
				var vcDialog = app.getHost(); 
				if (vcDialog){
					/*다이얼로그의 initValue 가져오기*/
					var voInitValue = app.getHostProperty("initValue");
					/*해당 값이 Null인지 여부를 체크하여 반환한다. */
						/*initValue 내의 msg 값을 아웃풋에 표시*/
						app.lookup("optValue").value = voInitValue["msg"];
				}
			}

			/*
			 * "확인" 버튼(btnSubmit)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSubmitClick(e){
				var btnSubmit = e.control;
				app.close(true);
			}

			/*
			 * "취소" 버튼(btnCancel)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnCancelClick(e){
				var btnCancel = e.control;
				app.close(false);
			};
			// End - User Script
			
			// Header
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["1fr", "50px"]);
			container.setLayout(formLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			var formLayout_2 = new cpr.controls.layouts.FormLayout();
			formLayout_2.horizontalSpacing = "0px";
			formLayout_2.verticalSpacing = "0px";
			formLayout_2.setColumns(["1fr", "1fr"]);
			formLayout_2.setRows(["1fr"]);
			group_1.setLayout(formLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSubmit");
				button_1.value = "확인";
				button_1.style.css({
					"border-right-style" : "none",
					"background-color" : "#0ca44e",
					"border-radius" : "0px",
					"text-shadow" : "none",
					"color" : "#FFFFFF",
					"border-left-style" : "none",
					"font-weight" : "bold",
					"font-size" : "20px",
					"border-bottom-style" : "none",
					"background-image" : "none",
					"border-top-style" : "none"
				});
				if(typeof onBtnSubmitClick == "function") {
					button_1.addEventListener("click", onBtnSubmitClick);
				}
				container.addChild(button_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var button_2 = new cpr.controls.Button("btnCancel");
				button_2.value = "취소";
				button_2.style.css({
					"border-right-style" : "none",
					"border-radius" : "0px",
					"background-color" : "#e5f2e3",
					"text-shadow" : "none",
					"color" : "#696969",
					"border-left-style" : "none",
					"font-weight" : "bold",
					"font-size" : "20px",
					"border-bottom-style" : "none",
					"background-image" : "none",
					"border-top-style" : "none"
				});
				if(typeof onBtnCancelClick == "function") {
					button_2.addEventListener("click", onBtnCancelClick);
				}
				container.addChild(button_2, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"colIndex": 0,
				"rowIndex": 1
			});
			
			var output_1 = new cpr.controls.Output("optValue");
			output_1.value = "";
			output_1.style.css({
				"font-weight" : "bold",
				"font-size" : "20px",
				"text-align" : "center"
			});
			container.addChild(output_1, {
				"colIndex": 0,
				"rowIndex": 0
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "recipeKitHub";
	cpr.core.Platform.INSTANCE.register(app);
})();
